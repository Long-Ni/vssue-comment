(window.webpackJsonp=window.webpackJsonp||[]).push([[9],{446:function(t,s,a){t.exports=a.p+"assets/img/aqs1.b6258a8c.png"},447:function(t,s,a){t.exports=a.p+"assets/img/aqs2.cb2a076d.png"},448:function(t,s,a){t.exports=a.p+"assets/img/sync_queue.33adadb0.png"},449:function(t,s,a){t.exports=a.p+"assets/img/acquire.18be0a10.png"},450:function(t,s,a){t.exports=a.p+"assets/img/exclusive_share.524d90b3.png"},451:function(t,s,a){t.exports=a.p+"assets/img/acquire_timeout.444e0f09.png"},452:function(t,s,a){t.exports=a.p+"assets/img/read_write.f898c941.png"},453:function(t,s,a){t.exports=a.p+"assets/img/waiter_queue.0c8e9457.png"},454:function(t,s,a){t.exports=a.p+"assets/img/all_queue.b1bdc687.png"},536:function(t,s,a){"use strict";a.r(s);var n=a(8),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("p",[t._v("同步器是实现锁的关键。可以这么理解同步器与锁的关系：锁是面向使用者的，它定义了使用者与锁交换的接口，隐藏了实现细节；同步器面向锁的实现者，它简化了锁的实现方式，屏蔽了同步状态管理、线程的排队、线程等待与通知等底层操作。")]),t._v(" "),n("p",[t._v("队列同步器（AbstractQueuedSynchronized，AQS），是用来构建锁和其他同步组件的基础框架，它使用了一个整型（int）成员变量表示同步状态，通过内置的 FIFO 队列来完成线程的排队工作。")]),t._v(" "),n("p",[t._v("将通过以下内容详解同步器及其锁的实现原理：")]),t._v(" "),n("ul",[n("li",[t._v("AQS 类 —— "),n("strong",[t._v("Java 并发编程的基石")]),t._v("。")]),t._v(" "),n("li",[t._v("Lock 接口 —— Lock 接口的实现类基本都是通过聚合了一个同步器的子类来完成线程访问控制。")]),t._v(" "),n("li",[t._v("独占锁（例 ReentrantLock） —— 它允许同一时刻只能有一个线程获取锁。")]),t._v(" "),n("li",[t._v("共享锁（例 ReentrantReadWriteLock） —— 它允许同一时刻有多个线程获取锁。")]),t._v(" "),n("li",[t._v("LockSupport 工具 —— 它定义了一组公共的静态方法，提供了最基本的线程阻塞和唤醒功能。")]),t._v(" "),n("li",[t._v("Condition 接口 —— 它为 Lock 提供的监视器方法，以实现等待/通知模式。")])]),t._v(" "),n("p",[t._v("JUC 中的 "),n("code",[t._v("ReentrantLock")]),t._v("、"),n("code",[t._v("ReentrantReadWriteLock")]),t._v("、"),n("code",[t._v("CountDownLatch")]),t._v(" 和 "),n("code",[t._v("Semaphore")]),t._v(" 等同步工具都是基于 AQS 实现的。")]),t._v(" "),n("p",[t._v("目录：")]),t._v(" "),n("TOC",{attrs:{"include-level":[2,4]}}),t._v(" "),n("h2",{attrs:{id:"_1-aqs"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_1-aqs"}},[t._v("#")]),t._v(" 1. AQS")]),t._v(" "),n("p",[t._v("先看一些概念：")]),t._v(" "),n("p",[n("strong",[t._v("独占锁")]),t._v("：同一时刻，只能有一个线程获得同步状态（锁）。而其他线程进入同步队列等待。")]),t._v(" "),n("p",[n("strong",[t._v("共享锁")]),t._v("：同一时刻，可以有多个线程获得同步状态。如读写锁。")]),t._v(" "),n("p",[n("strong",[t._v("可重入锁")]),t._v("：同一个线程对同一个共享资源的重复加锁。")]),t._v(" "),n("p",[n("strong",[t._v("同步队列")]),t._v("：所有获取锁失败的线程，进入同步队列等待再次获取锁。")]),t._v(" "),n("p",[n("strong",[t._v("等待队列")]),t._v("：已经拿到锁的线程，等待其他资源时，主动释放锁，进入等待队列，等待被唤醒后，重新进入同步队列，尝试获取锁。")]),t._v(" "),n("p",[n("strong",[t._v("公平锁")]),t._v("：对一个资源首次获取锁时，在绝对时间上，先对锁进行获取的请求一定先被满足。也就是，等待时间最长的线程最优先获取锁。")]),t._v(" "),n("p",[n("strong",[t._v("非公平锁")]),t._v("：对一个资源首次获取锁时，不考虑等待队列中线程请求锁的顺序，只要有一个节点 CAS 设置同步状态成功，表示获得锁。")]),t._v(" "),n("h3",{attrs:{id:"_1-1-lock-接口"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-lock-接口"}},[t._v("#")]),t._v(" 1.1 Lock 接口")]),t._v(" "),n("h4",{attrs:{id:"_1-1-1-lock-与-synchronized"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-1-lock-与-synchronized"}},[t._v("#")]),t._v(" 1.1.1 Lock 与 Synchronized")]),t._v(" "),n("p",[t._v("在 Java 5 之后，并发保重新增 Lock 接口用来实现锁功能，它提供了与 Synchronized 类似的功能。")]),t._v(" "),n("table",[n("thead",[n("tr",[n("th",[t._v("Synchronized 关键字")]),t._v(" "),n("th",[t._v("Lock 接口")])])]),t._v(" "),n("tbody",[n("tr",[n("td",[t._v("不可操作：隐式获取和释放锁")]),t._v(" "),n("td",[t._v("可操作：显示获取和释放锁")])]),t._v(" "),n("tr",[n("td",[t._v("阻塞获取锁")]),t._v(" "),n("td",[t._v("尝试非阻塞的获取锁")])]),t._v(" "),n("tr",[n("td",[t._v("不可中断（等待获取锁的过程中）")]),t._v(" "),n("td",[t._v("可中断")])]),t._v(" "),n("tr",[n("td",[t._v("无")]),t._v(" "),n("td",[t._v("可超时")])]),t._v(" "),n("tr",[n("td",[t._v("仅非公平")]),t._v(" "),n("td",[t._v("公平锁")])]),t._v(" "),n("tr",[n("td",[t._v("可重入")]),t._v(" "),n("td",[t._v("可重入")])])])]),t._v(" "),n("h4",{attrs:{id:"_1-1-2-lock-接口定义的方法"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-2-lock-接口定义的方法"}},[t._v("#")]),t._v(" 1.1.2 Lock 接口定义的方法")]),t._v(" "),n("p",[t._v("Lock 接口中仅定义了六个方法：")]),t._v(" "),n("table",[n("thead",[n("tr",[n("th",[t._v("方法名称")]),t._v(" "),n("th",[t._v("描述")])])]),t._v(" "),n("tbody",[n("tr",[n("td",[n("code",[t._v("void lock();")])]),t._v(" "),n("td",[t._v("获取锁。当前线程获得锁后，该方法返回。")])]),t._v(" "),n("tr",[n("td",[n("code",[t._v("void lockInterruptibly() throws InterruptedException;")])]),t._v(" "),n("td",[t._v("可响应中断的获取锁。在锁的获取中，可以中断当前线程。")])]),t._v(" "),n("tr",[n("td",[n("code",[t._v("boolean tryLock();")])]),t._v(" "),n("td",[t._v("尝试非阻塞的获取锁。"),n("br"),t._v("该方法立即返回，获取成功返回 "),n("code",[t._v("true")]),t._v("，获取失败返回 "),n("code",[t._v("fasle")]),t._v("。")])]),t._v(" "),n("tr",[n("td",[n("code",[t._v("boolean tryLock(long time, TimeUnit unit) throws InterruptedException;")])]),t._v(" "),n("td",[t._v("超时、可响应中断的获取锁。当前线程在以下 种情况下会返回："),n("br"),t._v("1. 当前线程在超时时间内获得了锁，返回 "),n("code",[t._v("true")]),t._v("；"),n("br"),t._v("2. 当前线程在超时时间内被中断，抛出中断异常；"),n("br"),t._v("3. 超时时间结束，返回 "),n("code",[t._v("false")]),t._v("。")])]),t._v(" "),n("tr",[n("td",[n("code",[t._v("void unlock();")])]),t._v(" "),n("td",[t._v("释放锁。")])]),t._v(" "),n("tr",[n("td",[n("code",[t._v("Condition newCondition();")])]),t._v(" "),n("td",[t._v("获取监视器组件，该组件和当前的锁绑定，当前线程只有获得了锁，才能调用该组件的 "),n("code",[t._v("wait()")]),t._v(" 方法，调用后，当前线程释放锁。")])])])]),t._v(" "),n("h4",{attrs:{id:"_1-1-3-lock-的使用"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-3-lock-的使用"}},[t._v("#")]),t._v(" 1.1.3 Lock 的使用")]),t._v(" "),n("div",{staticClass:"language-java extra-class"},[n("pre",{pre:!0,attrs:{class:"language-java"}},[n("code",[n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Lock")]),t._v(" lock "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ReentrantLock")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nlock"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("lock")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("try")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// TODO")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("finally")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  lock"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("unlock")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("ul",[n("li",[n("strong",[t._v("加锁不要写在 try 块中")]),t._v("，因为加锁时发生异常，会导致锁无故释放。")]),t._v(" "),n("li",[n("strong",[t._v("解锁在 finally 块中进行")]),t._v("，目的是保证在获取到锁后，最终一定能被释放。")])]),t._v(" "),n("p",[t._v("最后：Lock 接口的实现类基本都是通过聚合了一个同步器的子类来完成线程访问控制。")]),t._v(" "),n("h3",{attrs:{id:"_1-2-队列同步器-abstractqueuedsynchronizer-aqs"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-队列同步器-abstractqueuedsynchronizer-aqs"}},[t._v("#")]),t._v(" 1.2  队列同步器（AbstractQueuedSynchronizer，AQS）")]),t._v(" "),n("h4",{attrs:{id:"_1-2-1-使用方式-继承"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-1-使用方式-继承"}},[t._v("#")]),t._v(" 1.2.1 使用方式 —— 继承")]),t._v(" "),n("ul",[n("li",[t._v("子类通过继承同步器并实现它的抽象方法来管理同步状态。")]),t._v(" "),n("li",[t._v("子类一般定义为静态内部类。（自定义同步组件类的内部类，如 "),n("code",[t._v("ReentrantLock")]),t._v(" 类的内部类 "),n("code",[t._v("Sync")]),t._v(" 类）")])]),t._v(" "),n("h4",{attrs:{id:"_1-2-2-内容"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-2-内容"}},[t._v("#")]),t._v(" 1.2.2 内容")]),t._v(" "),n("p",[t._v("提供若干同步队列管理方法、同步状态获取与释放的方法以及 "),n("code",[t._v("ConditionObject")]),t._v(" 对象，供自定义同步组件使用。")]),t._v(" "),n("p",[n("img",{attrs:{src:a(446),alt:""}})]),t._v(" "),n("p",[n("img",{attrs:{src:a(447),alt:""}})]),t._v(" "),n("h4",{attrs:{id:"_1-2-3-同步状态的访问与修改-state-变量"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-3-同步状态的访问与修改-state-变量"}},[t._v("#")]),t._v(" 1.2.3 同步状态的访问与修改 —— state 变量")]),t._v(" "),n("p",[n("strong",[t._v("整型变量 state")]),t._v(" 及其对应的三个方法：")]),t._v(" "),n("ul",[n("li",[n("code",[t._v("int getState()")]),t._v("：获取当前同步状态")]),t._v(" "),n("li",[n("code",[t._v("void setState(int newState)")]),t._v("：设置当前同步状态")]),t._v(" "),n("li",[n("code",[t._v("boolean compareAndSetState(int expect, int update)")]),t._v("：使用 CAS 设置当前状态，保证状态设置的原子性。")])]),t._v(" "),n("p",[t._v("不同的同步器（锁），state 表示的同步状态有所不同：")]),t._v(" "),n("ul",[n("li",[t._v("独占不可重入锁：只有两个值 0 和 1。0：表示未加锁；1：表示已加锁。")]),t._v(" "),n("li",[t._v("独占可重入锁：大于 0 的值。0：表示未加锁，n：表示加锁重入的次数。")]),t._v(" "),n("li",[t._v("共享锁：将 "),n("code",[t._v("int")]),t._v(" 型变量拆分为两个 "),n("code",[t._v("unsigned short")]),t._v("，以此来分别表示读锁和写锁的状态。详看读写锁。")])]),t._v(" "),n("h4",{attrs:{id:"_1-2-4-设计原则-模版方法模式"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-4-设计原则-模版方法模式"}},[t._v("#")]),t._v(" 1.2.4 设计原则 —— 模版方法模式")]),t._v(" "),n("p",[t._v("同步器是基于"),n("strong",[t._v("模版方法模式")]),t._v("实现的。使用者需要继承同步器并重写指定的方法，然后将它组合在自定义同步组件的具体实现中，最后调用同步器提供的模版方法，而这些模版方法会调用使用重写的方法。")]),t._v(" "),n("h5",{attrs:{id:"_1-2-4-1-需要重写的方法-需要自己实现同步状态如何获取与释放"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-4-1-需要重写的方法-需要自己实现同步状态如何获取与释放"}},[t._v("#")]),t._v(" 1.2.4.1 需要重写的方法 —— 需要自己实现同步状态如何获取与释放")]),t._v(" "),n("ul",[n("li",[n("p",[t._v("Exclusive Mode Method")]),t._v(" "),n("ul",[n("li",[n("p",[t._v("独占式的获取同步状态：需要使用 CAS 设置同步状态。")]),t._v(" "),n("p",[n("code",[t._v("protected boolean tryAcquire(int arg) {throw new UnsupportedOperationException();}")])])]),t._v(" "),n("li",[n("p",[t._v("独占式的释放同步状态：")]),t._v(" "),n("p",[n("code",[t._v("protected boolean tryRelease(int arg) {throw new UnsupportedOperationException();}")])])]),t._v(" "),n("li",[n("p",[t._v("判断当前同步器是否在独占模式下被线程占用，如果是返回 "),n("code",[t._v("true")]),t._v("，否则返回 "),n("code",[t._v("false")]),t._v("：\n"),n("code",[t._v("protected boolean isHeldExclusively() {throw new UnsupportedOperationException();}")])])])])]),t._v(" "),n("li",[n("p",[t._v("Shared Mode Method")]),t._v(" "),n("ul",[n("li",[n("p",[t._v("共享式的获取同步状态：返回大于等于 0 的值，标示获取成功，反之，获取失败。")]),t._v(" "),n("p",[n("code",[t._v("protected int tryAcquireShared(int arg) {throw new UnsupportedOperationException();}")])])]),t._v(" "),n("li",[n("p",[t._v("共享式的释放同步状态：")]),t._v(" "),n("p",[n("code",[t._v("protected boolean tryReleaseShared(int arg) {throw new UnsupportedOperationException();}")])])])])])]),t._v(" "),n("h5",{attrs:{id:"_1-2-4-2-部分模版方法-同步器提供的模版方法帮助获取同步状态及管理同步队列"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-4-2-部分模版方法-同步器提供的模版方法帮助获取同步状态及管理同步队列"}},[t._v("#")]),t._v(" 1.2.4.2 部分模版方法 —— 同步器提供的模版方法帮助获取同步状态及管理同步队列")]),t._v(" "),n("ul",[n("li",[n("p",[t._v("Exclusive Mode Method")]),t._v(" "),n("ul",[n("li",[n("p",[t._v("独占式获取同步状态，如果获取成功则返回，否则该线程进入同步队列等待。")]),t._v(" "),n("div",{staticClass:"language-java extra-class"},[n("pre",{pre:!0,attrs:{class:"language-java"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("final")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("acquire")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" arg"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("tryAcquire")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("arg"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("acquireQueued")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("addWaiter")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Node")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("EXCLUSIVE"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" arg"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("selfInterrupt")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])]),t._v(" "),n("li",[n("p",[t._v("独占式、可中断获取同步状态，如果获取成功则返回，否则该线程进入同步队列等待。如果当前线程被中断抛出异常并返回。")]),t._v(" "),n("div",{staticClass:"language-java extra-class"},[n("pre",{pre:!0,attrs:{class:"language-java"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("final")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("acquireInterruptibly")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" arg"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("throws")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("InterruptedException")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Thread")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("interrupted")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("throw")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("InterruptedException")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("tryAcquire")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("arg"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("doAcquireInterruptibly")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("arg"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])]),t._v(" "),n("li",[n("p",[t._v("独占式、可超时中断获取同步状态，如果当前线程在超时时间内没有获取到同步状态，返回 "),n("code",[t._v("false")]),t._v("，如果获取到了返回 "),n("code",[t._v("true")]),t._v("。")]),t._v(" "),n("div",{staticClass:"language-java extra-class"},[n("pre",{pre:!0,attrs:{class:"language-java"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("final")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("boolean")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("tryAcquireNanos")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" arg"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("long")]),t._v(" nanosTimeout"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("throws")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("InterruptedException")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Thread")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("interrupted")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("throw")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("InterruptedException")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("tryAcquire")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("arg"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("||")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("doAcquireNanos")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("arg"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" nanosTimeout"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])]),t._v(" "),n("li",[n("p",[t._v("独占式释放同步状态，并唤醒后继节点。")]),t._v(" "),n("div",{staticClass:"language-java extra-class"},[n("pre",{pre:!0,attrs:{class:"language-java"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("final")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("boolean")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("release")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" arg"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("tryRelease")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("arg"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Node")]),t._v(" h "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" head"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("h "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" h"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("waitStatus "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("unparkSuccessor")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("h"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])])])]),t._v(" "),n("li",[n("p",[t._v("Shared Mode Method")]),t._v(" "),n("ul",[n("li",[n("p",[t._v("共享式获取同步状态，如果获取成功则返回，否则该线程进入同步队列等待。与独占式的区别是"),n("strong",[t._v("同一时刻可以有多个线程获得同步状态")]),t._v("。")]),t._v(" "),n("div",{staticClass:"language-java extra-class"},[n("pre",{pre:!0,attrs:{class:"language-java"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("final")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("acquireShared")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" arg"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("tryAcquireShared")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("arg"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("doAcquireShared")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("arg"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])]),t._v(" "),n("li",[n("p",[t._v("共享式、可中断获取同步状态，同上。")]),t._v(" "),n("div",{staticClass:"language-java extra-class"},[n("pre",{pre:!0,attrs:{class:"language-java"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("final")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("acquireSharedInterruptibly")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" arg"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("throws")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("InterruptedException")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Thread")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("interrupted")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("throw")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("InterruptedException")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("tryAcquireShared")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("arg"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("doAcquireSharedInterruptibly")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("arg"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])]),t._v(" "),n("li",[n("p",[t._v("共享式、可超时中断获取同步状态，同上。")]),t._v(" "),n("div",{staticClass:"language-java extra-class"},[n("pre",{pre:!0,attrs:{class:"language-java"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("final")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("boolean")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("tryAcquireSharedNanos")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" arg"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("long")]),t._v(" nanosTimeout"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("throws")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("InterruptedException")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Thread")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("interrupted")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("throw")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("InterruptedException")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("tryAcquireShared")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("arg"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("||")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("doAcquireSharedNanos")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("arg"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" nanosTimeout"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])]),t._v(" "),n("li",[n("p",[t._v("共享式的释放同步状态，同上。")]),t._v(" "),n("div",{staticClass:"language-java extra-class"},[n("pre",{pre:!0,attrs:{class:"language-java"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("final")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("boolean")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("releaseShared")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" arg"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("tryReleaseShared")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("arg"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("doReleaseShared")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])])])]),t._v(" "),n("li",[n("p",[t._v("获取等待在同步队列上的线程集合")]),t._v(" "),n("div",{staticClass:"language-java extra-class"},[n("pre",{pre:!0,attrs:{class:"language-java"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("final")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Collection")]),n("span",{pre:!0,attrs:{class:"token generics"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Thread")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("getQueuedThreads")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ArrayList")]),n("span",{pre:!0,attrs:{class:"token generics"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Thread")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" list "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ArrayList")]),n("span",{pre:!0,attrs:{class:"token generics"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Node")]),t._v(" p "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" tail"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" p "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" p "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" p"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prev"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Thread")]),t._v(" t "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" p"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("thread"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("t "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n      list"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("t"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" list"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])])]),t._v(" "),n("h3",{attrs:{id:"_1-3-同步队列"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_1-3-同步队列"}},[t._v("#")]),t._v(" 1.3 同步队列")]),t._v(" "),n("p",[t._v("同步器（AQS）依赖内部的同步队列（一个 FIFO 的双向队列）来完成同步状态的管理。")]),t._v(" "),n("h4",{attrs:{id:"_1-3-1-同步队列的结构"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_1-3-1-同步队列的结构"}},[t._v("#")]),t._v(" 1.3.1 同步队列的结构")]),t._v(" "),n("ul",[n("li",[n("p",[t._v("每个 Lock 对象都包含一个队列（同步队列），该队列是实现加锁/解锁的关键。")])]),t._v(" "),n("li",[n("p",[t._v("同步队列是一个 FIFO 队列，该队列的每个节点都包含一个线程的引用、等待状态、前驱后继节点指向以及节点类型。该线程就是获取同步状态失败的线程。")])]),t._v(" "),n("li",[n("p",[t._v("一个同步器对象包含一个等待队列，同步器对象包含首节点（head）和尾节点（tail）。")])])]),t._v(" "),n("p",[n("img",{attrs:{src:a(448),alt:""}})]),t._v(" "),n("h4",{attrs:{id:"_1-3-2-同步队列节点的入列和出列"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_1-3-2-同步队列节点的入列和出列"}},[t._v("#")]),t._v(" 1.3.2 同步队列节点的入列和出列")]),t._v(" "),n("ul",[n("li",[t._v("入列：如果一个线程获取同步状态失败，那么同步器就将当前线程以及等待状态信息构造成一个节点（Node）并加入同步队列尾部，进入阻塞状态。")]),t._v(" "),n("li",[t._v("出列：首节点的线程在释放同步状态时，将唤醒后继节点，而后继节点将会在获取同步状态成功将自己设置为首节点。")])]),t._v(" "),n("h4",{attrs:{id:"_1-3-3-节点-abstractqueuedsynchronizer-node"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_1-3-3-节点-abstractqueuedsynchronizer-node"}},[t._v("#")]),t._v(" 1.3.3 节点（AbstractQueuedSynchronizer.Node）")]),t._v(" "),n("p",[t._v("队列（同步队列、等待队列）中的节点（Node）用来保存获取同步状态失败的线程引用、等待状态、前驱后继节点以及节点类型（独占式还是共享式），如下表：")]),t._v(" "),n("table",[n("thead",[n("tr",[n("th",[t._v("属性")]),t._v(" "),n("th",[t._v("描述")])])]),t._v(" "),n("tbody",[n("tr",[n("td",[n("code",[t._v("volatile int waitStatus;")])]),t._v(" "),n("td",[t._v("线程的等待状态。包含以下值："),n("br"),t._v("1. CANCELLED，值为 1。"),n("strong",[t._v("取消")]),t._v("，"),n("br"),t._v("    表示在同步队列中自旋的节点由于线程超时或中断，"),n("br"),t._v("    取消等待，移出同步队列。"),n("br"),t._v("2. SIGNAL，值为 -1。"),n("strong",[t._v("发信号")]),t._v("，"),n("br"),t._v("    表示通知后继节点，使后继节点中的线程得以运行。"),n("br"),t._v("3. CONDITION，值为 -2。"),n("strong",[t._v("等待队列专用")]),t._v("，"),n("br"),t._v("    表示在等待队列中的节点，"),n("br"),t._v("    等到 signal() 方法调用后移动到同步队列尾部。"),n("br"),t._v("4. PROPAGATE，值为 -3。"),n("strong",[t._v("传播")]),t._v("，"),n("br"),t._v("    下一次共享式同步状态获取将会无条件的被传播下去，"),n("br"),t._v("    使连续的读操作节点依次进入临界区。"),n("br"),t._v("5. INITIAL，值为 0。默认，"),n("strong",[t._v("初始状态")]),t._v("，"),n("br"),t._v("    新节点会处于这种状态。")])]),t._v(" "),n("tr",[n("td",[n("code",[t._v("Node nextWaiter;")])]),t._v(" "),n("td",[t._v("等待队列中的后继节点。")])]),t._v(" "),n("tr",[n("td",[n("code",[t._v("volatile Node prev;")])]),t._v(" "),n("td",[t._v("节点的前驱节点，"),n("br"),t._v("当节点被取消时（线程被中断）让当前节点的前驱节点，"),n("br"),t._v("直接指向当前节点的后继节点。"),n("br"),t._v("当节点被加入到队列尾部时被设置。")])]),t._v(" "),n("tr",[n("td",[n("code",[t._v("volatile Node next;")])]),t._v(" "),n("td",[t._v("后继节点，用于维护队列顺序。")])]),t._v(" "),n("tr",[n("td",[n("code",[t._v("volatile Thread thread;")])]),t._v(" "),n("td",[t._v("获取同步状态的线程。")])])])]),t._v(" "),n("blockquote",[n("p",[t._v("多个线程获取同步状态时，由于只能有一个线程能够成功获取同步状态，因此设置头节点的方法不需要使用 CAS 保证。其他没有获取到同步状态的线程被构造成节点并加入到同步队列尾部，此时必须使用 CAS 保证线程安全的设置尾节点。")])]),t._v(" "),n("h3",{attrs:{id:"_1-4-同步器的独占模式"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_1-4-同步器的独占模式"}},[t._v("#")]),t._v(" 1.4 同步器的独占模式")]),t._v(" "),n("p",[t._v("独占式 "),n("code",[t._v("Node.EXCLUSIVE")]),t._v("，同一时刻只能有一个线程成功获取同步状态。")]),t._v(" "),n("h4",{attrs:{id:"_1-4-1-同步器如何独占式管理线程-获取与释放"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_1-4-1-同步器如何独占式管理线程-获取与释放"}},[t._v("#")]),t._v(" 1.4.1 同步器如何独占式管理线程（获取与释放）")]),t._v(" "),n("p",[t._v("同步器以独占式管理同步队列，使线程竞争同步状态流程：")]),t._v(" "),n("p",[n("img",{attrs:{src:a(449),alt:""}})]),t._v(" "),n("p",[t._v("同步器的 "),n("code",[t._v("acquire(int arg)")]),t._v(" 模版方法：（该方法对中断不敏感，也就是由于线程获取同步状态失败后进入同步队列中，后续对线程进行中断操作时，线程不会从同步队列中移出。）")]),t._v(" "),n("ul",[n("li",[t._v("先调用在自定义同步组件（比如 "),n("code",[t._v("ReentrantLock")]),t._v(" ）中重写的 "),n("code",[t._v("tryAcquire(int acquires)")]),t._v(" 方法尝试获取同步状态。")]),t._v(" "),n("li",[t._v("如果获取失败调用 "),n("code",[t._v("addWaiter(Node.EXCLUSIVE)")]),t._v(" 方法将失败的线程构造成节点并加入到同步队列。")]),t._v(" "),n("li",[t._v("然后在调用 "),n("code",[t._v("acquireQueued(final Node node, int arg)")]),t._v(" 方法进入自旋获取同步状态，如果当前节点的前驱节点为头节点，尝试再次获取同步状态。")])]),t._v(" "),n("p",[t._v("同步器的 "),n("code",[t._v("release(int arg)")]),t._v(" 模版方法：")]),t._v(" "),n("ul",[n("li",[t._v("先调用在自定义同步组件（比如 "),n("code",[t._v("ReentrantLock")]),t._v(" ）中重写的 "),n("code",[t._v("tryRelease(int arg)")]),t._v(" 尝试释放同步状态。")]),t._v(" "),n("li",[t._v("释放成功之后唤醒后继节点，"),n("code",[t._v("unparkSuccessor(Node node)")]),t._v(" 方法使用 "),n("code",[t._v("LockSupport")]),t._v(" 来唤醒处于等待状态的线程。")])]),t._v(" "),n("h4",{attrs:{id:"_1-4-2-同步器对独占锁加锁模版的规则"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_1-4-2-同步器对独占锁加锁模版的规则"}},[t._v("#")]),t._v(" 1.4.2 同步器对独占锁加锁模版的规则")]),t._v(" "),n("p",[t._v("获取独占锁（写锁）时同步器对竞争独占锁的线程所做的操作有：")]),t._v(" "),n("ul",[n("li",[t._v("入队：获取同步状态失败的线程，打包成节点，加入同步队列尾部，成为 "),n("code",[t._v("tail")]),t._v(" 节点；")]),t._v(" "),n("li",[t._v("执行：判断当前节点的前驱节点是不是头节点，如果是的话尝试获取锁，如果获取到了就执行；")]),t._v(" "),n("li",[t._v("等待：未获取到锁或者前驱节点不是头节点，就代表该节点需要继续自旋等待。")])]),t._v(" "),n("h4",{attrs:{id:"_1-4-3-注意事项"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_1-4-3-注意事项"}},[t._v("#")]),t._v(" 1.4.3 注意事项")]),t._v(" "),n("p",[t._v("在获取同步状态时，同步器维护一个同步队列，获取同步状态失败的线程会被爱加入到队列尾部并在队列中自旋；移出队列（停止自旋）的条件是前驱节点为头节点且成功获取了同步状态。在释放同步状态时，同步器调用 "),n("code",[t._v("tryRelease(int arg)")]),t._v(" 方法释放同步状态，然后唤醒头节点的后继节点。")]),t._v(" "),n("p",[t._v("⚠️对于独占式：")]),t._v(" "),n("ul",[n("li",[t._v("在获取同步状态时，\n"),n("ul",[n("li",[t._v("如果同步状态是第一次被获取（即 "),n("code",[t._v("getState() == 0")]),t._v("）此时未被某个线程占有，多个线程来竞争同步状态时需要循环 CAS 来保证线程安全（即，在重写 "),n("code",[t._v("tryAcquire(int acquires)")]),t._v(" 方法时，需要使用 "),n("code",[t._v("compareAndSetState(int expect, int update)")]),t._v(" 方法来设置同步状态）。")]),t._v(" "),n("li",[t._v("如果同步状态已经被某个线程所占用，且当前线程就是独占线程时，那么在重写 "),n("code",[t._v("tryAcquire(int acquires)")]),t._v(" 方法时，直接调用 "),n("code",[t._v("setState(int newState)")]),t._v(" 方法来设置同步状态。")])])]),t._v(" "),n("li",[t._v("在释放同步状态时，\n"),n("ul",[n("li",[t._v("重写 "),n("code",[t._v("tryRelease(int releases)")]),t._v(" 方法时，直接调用 "),n("code",[t._v("setState(int newState)")]),t._v(" 方法来设置同步状态（因为它是独占的，当前线程获取了同步状态，还是只能由当前线程释放同步状态）。")])])])]),t._v(" "),n("h3",{attrs:{id:"_1-5-同步器的共享模式"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_1-5-同步器的共享模式"}},[t._v("#")]),t._v(" 1.5 同步器的共享模式")]),t._v(" "),n("p",[t._v("共享式 "),n("code",[t._v("Node.SHARED")]),t._v("，同一时刻可能会有多个线程成功获取同步状态。")]),t._v(" "),n("p",[t._v("以文件读写为例，如果一个程序对文件进行读操作，那么这一时刻对于该文件的写操作均被阻塞，而读操作能够多个线程同时进行。写操作要求对资源独占式访问，而读操作可以是共享式访问，两种不同的访问模式在同一时刻对文件或资源访问情况如下图：")]),t._v(" "),n("p",[n("img",{attrs:{src:a(450),alt:""}})]),t._v(" "),n("h4",{attrs:{id:"_1-5-1-同步器如何共享式管理线程-获取与释放"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_1-5-1-同步器如何共享式管理线程-获取与释放"}},[t._v("#")]),t._v(" 1.5.1 同步器如何共享式管理线程（获取与释放）")]),t._v(" "),n("p",[t._v("同步器的 "),n("code",[t._v("acquireShared(int arg)")]),t._v(" 模版方法：")]),t._v(" "),n("ul",[n("li",[t._v("先调用在自定义同步组件（比如 "),n("code",[t._v("ReentrantReadWriteLock")]),t._v(" ）中重写的 "),n("code",[t._v("tryAcquireShared(int arg)")]),t._v(" 方法尝试获取同步状态，当返回值大于等于 0 时，表示能过获取到同步状态。")]),t._v(" "),n("li",[t._v("如果获取失败调用 "),n("code",[t._v("doAcquireShared(int arg)")]),t._v(" 方法，将失败的线程构造成节点并加入到同步队列（也是同样的方法 "),n("code",[t._v("addWaiter(Node.SHARED)")]),t._v("），并进入自旋获取同步状态，如果当前节点的前驱节点为头节点，尝试再次获取同步状态。")])]),t._v(" "),n("p",[t._v("同步器的 "),n("code",[t._v("releaseShared(int arg)")]),t._v(" 模版方法：")]),t._v(" "),n("ul",[n("li",[t._v("先调用在自定义同步组件（比如 "),n("code",[t._v("ReentrantReadWriteLock")]),t._v(" ）中重写的 "),n("code",[t._v("tryReleaseShared(int arg)")]),t._v(" 方法尝试释放同步状态。")]),t._v(" "),n("li",[t._v("释放成功之后调用 "),n("code",[t._v("doReleaseShared()")]),t._v(" 方法唤醒后继节点。")])]),t._v(" "),n("h4",{attrs:{id:"_1-5-2-同步器对共享锁加锁模版的规则"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_1-5-2-同步器对共享锁加锁模版的规则"}},[t._v("#")]),t._v(" 1.5.2 同步器对共享锁加锁模版的规则")]),t._v(" "),n("p",[t._v("获取共享锁（读锁）时同步器对竞争共享锁的线程所做的操作有：")]),t._v(" "),n("ul",[n("li",[t._v("入队：获取同步状态失败的线程，打包成节点，加入同步队列尾部，成为 "),n("code",[t._v("tail")]),t._v(" 节点；")]),t._v(" "),n("li",[t._v("执行：判断当前节点的前驱节点是不是头节点，如果是的话尝试获取锁，如果获取到了就执行；")]),t._v(" "),n("li",[t._v("传播：如果后面的节点还是共享锁（读锁），继续尝试获取锁，一直传播下去，直到遇到获取独占锁的节点。这也就是共享锁（读锁）的传播；")]),t._v(" "),n("li",[t._v("等待：未获取到锁或者前驱节点不是头节点，就代表该节点需要继续自旋等待。")])]),t._v(" "),n("p",[t._v("与独占锁（写锁）比较一下，共享锁（读锁）多了一个传播的逻辑，来看一下代码：")]),t._v(" "),n("div",{staticClass:"language-java extra-class"},[n("pre",{pre:!0,attrs:{class:"language-java"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("doAcquireShared")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" arg"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("final")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Node")]),t._v(" node "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("addWaiter")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Node")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("SHARED"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("boolean")]),t._v(" interrupted "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("try")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ◉ 循环判断当前节点的前驱节点是否为头节点，如果是，则获取锁。")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("final")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Node")]),t._v(" p "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" node"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("predecessor")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("p "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" head"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" r "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("tryAcquireShared")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("arg"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("r "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n          "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ◉ 获取到共享锁之后将当前节点设置为头节点。（此处既是传播）")]),t._v("\n          "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("setHeadAndPropagate")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("node"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" r"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n          p"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("next "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// help GC")]),t._v("\n          "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("shouldParkAfterFailedAcquire")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("p"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" node"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        interrupted "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("parkAndCheckInterrupt")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("catch")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Throwable")]),t._v(" t"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("cancelAcquire")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("node"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("throw")]),t._v(" t"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("finally")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("interrupted"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("selfInterrupt")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ◉ 将当前的节点设置为头节点，判断如果是共享锁，确保释放同步状态的传播。")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("setHeadAndPropagate")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Node")]),t._v(" node"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" propagate"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Node")]),t._v(" h "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" head"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Record old head for check below")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("setHead")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("node"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("propagate "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("||")]),t._v(" h "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("||")]),t._v(" h"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("waitStatus "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("||")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("h "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" head"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("||")]),t._v(" h"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("waitStatus "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Node")]),t._v(" s "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" node"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("next"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("s "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("||")]),t._v(" s"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("isShared")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("doReleaseShared")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ◉ 确保释放同步状态的传播，如果需要 signal 则唤醒当前节点的后继节点。")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 如果不需要，将状态设置为传播，确保在释放同步状态的时候，继续传播")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("doReleaseShared")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Node")]),t._v(" h "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" head"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("h "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" h "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!=")]),t._v(" tail"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" ws "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" h"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("waitStatus"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ws "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Node")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("SIGNAL"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v("h"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("compareAndSetWaitStatus")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Node")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("SIGNAL"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n          "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("continue")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// loop to recheck cases")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("unparkSuccessor")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("h"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 唤醒当前节点")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ws "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v("\n               "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v("h"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("compareAndSetWaitStatus")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Node")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("PROPAGATE"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("continue")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// loop on failed CAS")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("h "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" head"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// loop if head changed")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("break")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("h4",{attrs:{id:"_1-5-3-注意事项"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_1-5-3-注意事项"}},[t._v("#")]),t._v(" 1.5.3 注意事项")]),t._v(" "),n("p",[t._v("⚠️对于共享式来说，它能够支持多个线程同时访问并发组件（比如 Semaphore），所以当它获取与释放同步状态时，需要循环 CAS 来保证线程安全（即，在重写 "),n("code",[t._v("tryAcquireShared(int arg)")]),t._v(" 和 "),n("code",[t._v("tryReleaseShared(int arg)")]),t._v(" 方法时，需要使用 "),n("code",[t._v("compareAndSetState(int expect, int update)")]),t._v(" 方法来设置同步状态）。")]),t._v(" "),n("h3",{attrs:{id:"_1-6-同步器的独占式超时模式"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_1-6-同步器的独占式超时模式"}},[t._v("#")]),t._v(" 1.6 同步器的独占式超时模式")]),t._v(" "),n("p",[t._v("超时获取同步状态过程可以被视作响应中断获取同步状态过程的“增强版”。")]),t._v(" "),n("h4",{attrs:{id:"_1-6-1-同步器如何独占式超时管理线程"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_1-6-1-同步器如何独占式超时管理线程"}},[t._v("#")]),t._v(" 1.6.1 同步器如何独占式超时管理线程")]),t._v(" "),n("p",[t._v("同步器以独占式、可超时、可中断管理同步队列，使线程竞争同步状态流程：")]),t._v(" "),n("p",[n("img",{attrs:{src:a(451),alt:""}})]),t._v(" "),n("h2",{attrs:{id:"_2-独占锁-不可重入-mutex"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_2-独占锁-不可重入-mutex"}},[t._v("#")]),t._v(" 2. 独占锁（不可重入） —— Mutex")]),t._v(" "),n("p",[t._v("同一时刻，只允许一个线程（独占）占有锁一次（不可重入）。")]),t._v(" "),n("p",[t._v("直接看 "),n("code",[t._v("Mutex")]),t._v(" 代码：")]),t._v(" "),n("div",{staticClass:"language-java extra-class"},[n("pre",{pre:!0,attrs:{class:"language-java"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Mutex")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("implements")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Lock")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 自定义一个同步器，它继承了同步器（AQS）并定义为静态内部类")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Sync")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("extends")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("AbstractQueuedSynchronizer")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 当状态为 0 时获取锁，并设置独占线程")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Override")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("protected")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("boolean")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("tryAcquire")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" arg"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("compareAndSetState")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("setExclusiveOwnerThread")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Thread")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("currentThread")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n                "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n            "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 此处体现不可重入！！！")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 释放锁，将状态设置为 0，并取消独占线程")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Override")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("protected")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("boolean")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("tryRelease")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" arg"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("getState")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("throw")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("IllegalMonitorStateException")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("setExclusiveOwnerThread")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("setState")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 是否处于独占状态")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Override")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("protected")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("boolean")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("isHeldExclusively")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("getState")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 返回一个 Condition，每个 Condition 都包含一个 Condition 队列")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("final")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ConditionObject")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("newCondition")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ConditionObject")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 将操作代理到 Sync 上")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("final")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Sync")]),t._v(" sync "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Sync")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),n("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Override")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("lock")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        sync"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("acquire")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    "),n("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Override")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("lockInterruptibly")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("throws")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("InterruptedException")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        sync"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("acquireInterruptibly")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    "),n("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Override")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("boolean")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("tryLock")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" sync"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("tryAcquire")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    "),n("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Override")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("boolean")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("tryLock")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("long")]),t._v(" time"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("TimeUnit")]),t._v(" unit"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("throws")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("InterruptedException")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" sync"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("tryAcquireNanos")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" unit"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("toNanos")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("time"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    "),n("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Override")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("unlock")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        sync"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("release")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    "),n("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Override")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Condition")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("newCondition")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" sync"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("newCondition")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("boolean")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("isLocked")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" sync"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("isHeldExclusively")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 查询是否有线程在等待获取同步状态。")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("boolean")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("hasQueuedThreads")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" sync"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("hasQueuedThreads")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n")])])]),n("p",[t._v("测试不可重入：")]),t._v(" "),n("div",{staticClass:"language-java extra-class"},[n("pre",{pre:!0,attrs:{class:"language-java"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("MutexTest")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\n    "),n("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Test")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("test")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Lock")]),t._v(" lock "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Mutex")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Worker")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("extends")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Thread")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),n("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Override")]),t._v("\n            "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("run")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" threadName "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Thread")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("currentThread")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("getName")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n                "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" i "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                    lock"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("lock")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 第一次加锁")]),t._v("\n                    "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("threadName "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"已加锁！"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n                    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("try")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                        lock"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("lock")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 第二次加锁，将被阻塞，不再往下执行")]),t._v("\n                        "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("threadName"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n                    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("finally")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                        "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("threadName "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"已解锁！"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n                        lock"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("unlock")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n                        lock"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("unlock")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n                    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n                "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n            "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n        "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Worker")]),t._v(" worker "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Worker")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        worker"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("start")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("p",[t._v("输出：")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("Thread-3已加锁！\n")])])]),n("p",[t._v("线程调用 "),n("code",[t._v("Mutex")]),t._v(" 的 "),n("code",[t._v("lock()")]),t._v(" 方法加锁后，再次调用 "),n("code",[t._v("lock()")]),t._v(" 方法，则该线程被自己阻塞，不再往下执行。")]),t._v(" "),n("h2",{attrs:{id:"_3-独占锁-可重入-reentrantlock"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_3-独占锁-可重入-reentrantlock"}},[t._v("#")]),t._v(" 3. 独占锁（可重入） —— ReentrantLock")]),t._v(" "),n("p",[t._v("同一时刻，允许一个线程（独占）占有锁多次（可重入）。")]),t._v(" "),n("p",[t._v("ReentrantLock 提供构造函数，来控制锁是否公平。默认为非公平锁。因为非公平虽然会较大概率的造成线程“饥饿”， 但是极少的线程切换带来了更高的效率，更大的吞吐量。")]),t._v(" "),n("h3",{attrs:{id:"_3-1-实现可重入"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_3-1-实现可重入"}},[t._v("#")]),t._v(" 3.1 实现可重入")]),t._v(" "),n("p",[t._v("重进入指"),n("strong",[t._v("线程在获取到锁之后能够再次获取该锁而不发生阻塞")]),t._v("。需解决两个问题：")]),t._v(" "),n("ul",[n("li",[n("p",[t._v("识别线程是否为当前占据锁的线程，如果是才能再次获取。")]),t._v(" "),n("blockquote",[n("p",[t._v("AOS（AbstractOwnableSynchronizer），它是 AQS 的父类，这个类为创建具有所有权概念的锁和同步器提供了基础。基于它可以实现锁是否为某个线程独占。")]),t._v(" "),n("p",[t._v("AOS 类仅包含一个 "),n("code",[t._v("Thread")]),t._v(" 类型成员变量（私有且 "),n("code",[t._v("transient")]),t._v(" 关键字修饰）及其 "),n("code",[t._v("get()、set()")]),t._v(" 方法。")]),t._v(" "),n("p",[t._v("使用：")]),t._v(" "),n("ol",[n("li",[t._v("当一个线程获取到同步状态后，调用 "),n("code",[t._v("setExclusiveOwnerThread(current)")]),t._v(" 设置独占线程。")]),t._v(" "),n("li",[t._v("当线程再次获取同步状态时，使用 "),n("code",[t._v("Thread.currentThread() == getExclusiveOwnerThread()")]),t._v(" 判断当前线程是否为锁持有的线程。")])]),t._v(" "),n("p",[n("code",[t._v("ReentrantLock")]),t._v(" 的 "),n("code",[t._v("nonfairTryAcquire(int acquires)")]),t._v(" 方法（非公平锁）：")]),t._v(" "),n("div",{staticClass:"language-java extra-class"},[n("pre",{pre:!0,attrs:{class:"language-java"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("final")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("boolean")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("nonfairTryAcquire")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" acquires"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("final")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Thread")]),t._v(" current "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Thread")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("currentThread")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" c "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("getState")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("c "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("compareAndSetState")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" acquires"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("setExclusiveOwnerThread")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("current"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("current "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("getExclusiveOwnerThread")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" nextc "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" c "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" acquires"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("nextc "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// overflow")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("throw")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Error")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Maximum lock cou/nt exceeded"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("setState")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("nextc"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])])]),t._v(" "),n("li",[n("p",[t._v("锁的最终释放。")]),t._v(" "),n("blockquote",[n("p",[t._v("成功获取锁的线程，当它再次获取锁，只是增加了同步状态的值（整型变量 state 的值）。")]),t._v(" "),n("p",[t._v("所以，在释放同步状态时，减少同步状态的值，直到同步状态的值为 0 时，返回 "),n("code",[t._v("true")]),t._v(" ，并取消线程独占，最终释放成功。")]),t._v(" "),n("p",[n("code",[t._v("ReentrantLock")]),t._v(" 的 "),n("code",[t._v("tryRelease(int releases)")]),t._v(" 方法：")]),t._v(" "),n("div",{staticClass:"language-java extra-class"},[n("pre",{pre:!0,attrs:{class:"language-java"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("protected")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("final")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("boolean")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("tryRelease")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" releases"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n   "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" c "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("getState")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" releases"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n   "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Thread")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("currentThread")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("getExclusiveOwnerThread")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n       "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("throw")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("IllegalMonitorStateException")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n   "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("boolean")]),t._v(" free "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n   "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("c "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n       free "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n       "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("setExclusiveOwnerThread")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n   "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n   "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("setState")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("c"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n   "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" free"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])])])]),t._v(" "),n("h3",{attrs:{id:"_3-2-公平与非公平的区别"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_3-2-公平与非公平的区别"}},[t._v("#")]),t._v(" 3.2 公平与非公平的区别")]),t._v(" "),n("p",[t._v("多个线程在首次获取锁时，公平锁倾向授予等待时间最长的线程访问权限。非公平锁不能保证任何特定的访问顺序。")]),t._v(" "),n("p",[n("code",[t._v("ReentrantLock")]),t._v(" 的 "),n("code",[t._v("tryAcquire(int acquires)")]),t._v(" 方法（公平锁）：")]),t._v(" "),n("div",{staticClass:"language-java extra-class"},[n("pre",{pre:!0,attrs:{class:"language-java"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("protected")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("final")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("boolean")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("tryAcquire")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" acquires"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("final")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Thread")]),t._v(" current "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Thread")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("currentThread")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" c "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("getState")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("c "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("hasQueuedPredecessors")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("compareAndSetState")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" acquires"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("setExclusiveOwnerThread")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("current"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("current "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("getExclusiveOwnerThread")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" nextc "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" c "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" acquires"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("nextc "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("throw")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Error")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Maximum lock count exceeded"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("setState")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("nextc"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("p",[t._v("该方法与非公平锁获取方法比较，唯一不同在于：首次获取锁时，增加 "),n("code",[t._v("hasQueuedPredecessors()")]),t._v(" 判断条件。")]),t._v(" "),n("blockquote",[n("p",[t._v("hasQueuedPredecessors() 方法：")]),t._v(" "),n("ul",[n("li",[n("p",[t._v("如果当前线程前面有排队线程返回 "),n("code",[t._v("true")]),t._v("。")])]),t._v(" "),n("li",[n("p",[t._v("如果当前线程位于队列首部或者队列为空返回 "),n("code",[t._v("false")]),t._v("。")]),t._v(" "),n("div",{staticClass:"language-java extra-class"},[n("pre",{pre:!0,attrs:{class:"language-java"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("final")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("boolean")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("hasQueuedPredecessors")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Node")]),t._v(" h"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" s"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("h "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" head"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("s "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" h"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("next"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("||")]),t._v(" s"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("waitStatus "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      s "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// traverse in case of concurrent cancellation")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Node")]),t._v(" p "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" tail"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" p "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!=")]),t._v(" h "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" p "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" p "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" p"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prev"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("p"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("waitStatus "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n          s "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" p"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("s "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" s"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("thread "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Thread")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("currentThread")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])])])]),t._v(" "),n("p",[t._v("公平锁保证了等待时间最长的线程优先获取锁，而代价是进行大量的线程切换。")]),t._v(" "),n("p",[t._v("非公平锁可能使线程“饥饿”，但极少的线程切换，保证了更大的吞吐量。")]),t._v(" "),n("h3",{attrs:{id:"_3-3-测试可重入"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_3-3-测试可重入"}},[t._v("#")]),t._v(" 3.3 测试可重入")]),t._v(" "),n("div",{staticClass:"language-java extra-class"},[n("pre",{pre:!0,attrs:{class:"language-java"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ReentrantLockTest")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\n    "),n("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Test")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("test")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Lock")]),t._v(" lock "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ReentrantLock")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Worker")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("extends")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Thread")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),n("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Override")]),t._v("\n            "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("run")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" threadName "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Thread")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("currentThread")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("getName")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n                "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" i "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                    lock"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("lock")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 第一次加锁")]),t._v("\n                    "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("threadName "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"已加锁！"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n                    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("try")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                        lock"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("lock")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 第二次加锁，不会阻塞，继续执行")]),t._v("\n                        "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("threadName"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n                    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("finally")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                        "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("threadName "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"已解锁！"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n                        lock"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("unlock")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n                        lock"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("unlock")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n                    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n                "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n            "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n        "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Worker")]),t._v(" worker "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Worker")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        worker"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("start")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("p",[t._v("输出：")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("Thread-3已加锁！\nThread-3\nThread-3已解锁！\nThread-3已加锁！\nThread-3\nThread-3已解锁！\n")])])]),n("p",[t._v("上面的不可重入锁 "),n("code",[t._v("Mutex")]),t._v(" 在第二次加锁后被阻塞，不再继续往下执行。而 "),n("code",[t._v("ReentrantLock")]),t._v(" 在多次加锁后继续往下执行，支持可重入。")]),t._v(" "),n("h2",{attrs:{id:"_4-共享锁-读写锁-reentrantreadwritelock"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_4-共享锁-读写锁-reentrantreadwritelock"}},[t._v("#")]),t._v(" 4. 共享锁 —— 读写锁（ReentrantReadWriteLock）")]),t._v(" "),n("p",[t._v("上面介绍的独占锁也叫排他锁，在同一时刻只允许一个线程访问。")]),t._v(" "),n("p",[t._v("读写锁在同一时刻允许多个线程访问（共享性）。具体来讲：")]),t._v(" "),n("ul",[n("li",[t._v("读锁和写锁可以看作读写锁的两种状态。")]),t._v(" "),n("li",[t._v("读锁是一个线程对共享资源进行读操作时对资源加的锁。写锁是一个线程对共享资源进行写操作时对资源加的锁。")]),t._v(" "),n("li",[t._v("同一个线程对同一个共享资源既可以进行读加锁（读操作时）也可以进行写加锁（写操作时）。（前面讲的排他锁是同一个线程对共享资源加锁时不分操作，直接上锁，不允许其他线程访问该共享资源。）")]),t._v(" "),n("li",[t._v("读锁允许多个线程对同一共享资源同时加锁。写锁只允许一个线程对共享资源加锁，其他线程均被阻塞。")]),t._v(" "),n("li",[t._v("所以，在某个线程的写操作访问共享资源的时候，其他线程的所有读写操作均被阻塞。但是该线程的读操作并未被阻塞。")])]),t._v(" "),n("p",[t._v("（书上的原话：*读写锁在同一时刻允许多个线程访问，但是在写线程访问时，所有的读线程和其他写线程均被阻塞。*跟我理解的不太一样，按照书上的意思，就不能实现锁降级，即把持住写锁去获得读锁再释放写锁。通过源码分析，同一线程，获取写锁后，是可以获取读锁的。）")]),t._v(" "),n("p",[t._v("读写锁维护了一对锁，一个读锁，一个写锁，通过分离读锁和写锁，使得并发相比一般的排他锁有很大提升。")]),t._v(" "),n("p",[t._v("读写锁也支持重进入：")]),t._v(" "),n("ul",[n("li",[t._v("线程获取读锁之后能够再次获得读锁。")]),t._v(" "),n("li",[t._v("线程在获取写锁之后，当前线程能够再次获取写锁，同时也可以获得读锁。")])]),t._v(" "),n("p",[t._v("综上来说：")]),t._v(" "),n("ul",[n("li",[t._v("读锁 —— 支持重进入的共享锁：可以被多个线程同时获取，且可以获取多次。")]),t._v(" "),n("li",[t._v("写锁 —— 支持重进入的排他锁：只能被一个线程获取多次。在未释放写锁前，其他线程均阻塞。")])]),t._v(" "),n("h3",{attrs:{id:"_4-1-readwritelock-接口"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_4-1-readwritelock-接口"}},[t._v("#")]),t._v(" 4.1 ReadWriteLock 接口")]),t._v(" "),n("p",[n("code",[t._v("ReentrantReadWriteLock")]),t._v(" 实现了 "),n("code",[t._v("ReadWriteLock")]),t._v(" 接口。")]),t._v(" "),n("p",[n("code",[t._v("ReadWriteLock")]),t._v(" 接口仅提供 "),n("code",[t._v("Lock readLock()")]),t._v(" 方法和 "),n("code",[t._v("Lock writeLock()")]),t._v(" 方法。")]),t._v(" "),n("p",[n("code",[t._v("ReentrantReadWriteLock")]),t._v(" 提供的部分监控内部工作状态的方法：")]),t._v(" "),n("table",[n("thead",[n("tr",[n("th",[t._v("方法名称")]),t._v(" "),n("th",[t._v("描述")])])]),t._v(" "),n("tbody",[n("tr",[n("td",[t._v("int getReadLockCount()")]),t._v(" "),n("td",[t._v("当前读锁被获取的次数（获得读锁的多个线程所有重入次数的和）。")])]),t._v(" "),n("tr",[n("td",[t._v("int getReadHoldCount()")]),t._v(" "),n("td",[t._v("当前线程获取读锁的次数（重入的次数）。")])]),t._v(" "),n("tr",[n("td",[t._v("boolean isWriteLocked()")]),t._v(" "),n("td",[t._v("判断写锁是否被获取。")])]),t._v(" "),n("tr",[n("td",[t._v("int getWriteHoldCount()")]),t._v(" "),n("td",[t._v("当前线程获取写锁的次数（重入的次数）。")])])])]),t._v(" "),n("h3",{attrs:{id:"_4-2-读写锁状态设计"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_4-2-读写锁状态设计"}},[t._v("#")]),t._v(" 4.2 读写锁状态设计")]),t._v(" "),n("p",[t._v("AQS 使用一个整型变量 "),n("code",[t._v("state")]),t._v(" 来管理同步状态。读写锁同样依赖这个整型变量 state。")]),t._v(" "),n("p",[t._v("在独占锁中，整型变量 "),n("code",[t._v("state")]),t._v(" 的值表示被一个线程重入（重复获取同步状态）的次数。")]),t._v(" "),n("p",[t._v("读写锁需要在一个整型变量 "),n("code",[t._v("state")]),t._v(" 上维护多个读线程与一个写线程的同步状态。")]),t._v(" "),n("p",[t._v("来看具体设计：将这个变量 "),n("code",[t._v("state")]),t._v(" "),n("em",[n("strong",[t._v("按位切割使用")])]),t._v("，切分为 "),n("code",[t._v("unsigned short")]),t._v(" 的两部分，高 16 位表示读状态，低 16 位表示写状态。")]),t._v(" "),n("p",[n("img",{attrs:{src:a(452),alt:""}})]),t._v(" "),n("p",[t._v("上图中的同步状态表示一个线程同时获取了写锁和读锁，且写锁获得三次，读锁获得两次。")]),t._v(" "),n("p",[t._v("读写状态获取 —— 通过位运算快速确定：")]),t._v(" "),n("ul",[n("li",[t._v("写状态 = "),n("code",[t._v("getState() & 0x0000FFFF")]),t._v("（将高 16 位全部抹去）")]),t._v(" "),n("li",[t._v("读状态 = "),n("code",[t._v("getState() >>> 16")]),t._v("（无符号补 0 右移 16 位）")])]),t._v(" "),n("p",[t._v("读写状态更新：")]),t._v(" "),n("ul",[n("li",[t._v("写状态增加 1 时："),n("code",[t._v("getState() + 1")])]),t._v(" "),n("li",[t._v("读状态增加 1 时："),n("code",[t._v("getState() + (1<<16)")]),t._v("，也就是 "),n("code",[t._v("getState() + 0x00010000")])])]),t._v(" "),n("table",[n("thead",[n("tr",[n("th",[t._v("16 进制")]),t._v(" "),n("th",[t._v("10 进制")]),t._v(" "),n("th",[t._v("2 进制")]),t._v(" "),n("th",[t._v("移位运算")])])]),t._v(" "),n("tbody",[n("tr",[n("td",[t._v("0x0000FFFF")]),t._v(" "),n("td",[t._v("65535")]),t._v(" "),n("td",[t._v("1111111111111111")]),t._v(" "),n("td",[t._v("(1<<16) -1")])]),t._v(" "),n("tr",[n("td",[t._v("0x00010000")]),t._v(" "),n("td",[t._v("65536")]),t._v(" "),n("td",[t._v("10000000000000000")]),t._v(" "),n("td",[t._v("1<<16")])])])]),t._v(" "),n("p",[t._v("推论："),n("strong",[t._v("getState() 不等于 0 时，当写状态等于 0 时，则读状态大于 0，即读锁已被获取。")])]),t._v(" "),n("h3",{attrs:{id:"_4-3-写锁的获取与释放"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_4-3-写锁的获取与释放"}},[t._v("#")]),t._v(" 4.3 写锁的获取与释放")]),t._v(" "),n("p",[t._v("写锁是一个支持重进入的排他锁。只能被一个线程获取多次。在未释放写锁前，其他线程均阻塞。")]),t._v(" "),n("p",[t._v("写状态是当前线程写锁重入的次数。")]),t._v(" "),n("h4",{attrs:{id:"_4-3-1-reentrantreadwritelock-对写锁获取的实现"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_4-3-1-reentrantreadwritelock-对写锁获取的实现"}},[t._v("#")]),t._v(" 4.3.1 ReentrantReadWriteLock 对写锁获取的实现")]),t._v(" "),n("p",[t._v("获取写锁的条件：")]),t._v(" "),n("ul",[n("li",[t._v("读锁已经获取且写锁未获取时，不管当前线程是否为获取读锁的线程，都无法获取写锁。因为，"),n("strong",[t._v("读写锁要确保写锁的操作对读锁可见。")])]),t._v(" "),n("li",[t._v("写锁已经获取，且当前线程为获取写锁的线程时，则再次获得写锁。若当前线程不是获取写锁的线程，则阻塞。")]),t._v(" "),n("li",[t._v("读锁和写锁都未获取时，有可能获取写锁。（考虑公平与非公平，且以 CAS 设置）")])]),t._v(" "),n("div",{staticClass:"language-java extra-class"},[n("pre",{pre:!0,attrs:{class:"language-java"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("protected")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("final")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("boolean")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("tryAcquire")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" acquires"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Thread")]),t._v(" current "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Thread")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("currentThread")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" c "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("getState")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" w "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("exclusiveCount")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("c"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 获取写锁。w == 0 表示写锁未被获取。")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("c "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// (Note: if c != 0 and w == 0 then shared count != 0)")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ◉ 如果读锁获取，而写锁未获取，返回 false。")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ◉ 如果写锁已经获取（此时不用关心读锁），且当前线程不是获取写锁的线程，返回 false。")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("w "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("||")]),t._v(" current "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("getExclusiveOwnerThread")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ◉ 写锁已经获取且当前线程为获取写锁的线程，如果写锁大于最大加速次数时，抛出 Error。")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("w "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("exclusiveCount")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("acquires"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" MAX_COUNT"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("throw")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Error")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Maximum lock count exceeded"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Reentrant acquire")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ◉ 写锁已经获取且当前线程为获取写锁的线程，且写锁小于最大加锁次数时，再次获取写锁，返回 true。")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("setState")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("c "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" acquires"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ◉ 读锁和写锁从未被获取时，以 CAS 获取写锁，获取成功，则设置独占线程并返回 true。")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ◉ 获取失败，则返回 false。")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("writerShouldBlock")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("||")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("compareAndSetState")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("c"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" c "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" acquires"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("setExclusiveOwnerThread")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("current"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("blockquote",[n("p",[n("code",[t._v("writerShouldBlock()")]),t._v(" 方法，")]),t._v(" "),n("ul",[n("li",[t._v("在非公平锁情况下，总是返回 false；")]),t._v(" "),n("li",[t._v("在公平锁情况下：")]),t._v(" "),n("li",[t._v("如果当前线程在同步队列首部或者队列为空，返回 false。")]),t._v(" "),n("li",[t._v("如果当前线程前面有排队的线程，返回 true（即，当前线程应该被阻塞）。")])])]),t._v(" "),n("h4",{attrs:{id:"_4-3-2-reentrantreadwritelock-对写锁释放的实现"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_4-3-2-reentrantreadwritelock-对写锁释放的实现"}},[t._v("#")]),t._v(" 4.3.2 ReentrantReadWriteLock 对写锁释放的实现")]),t._v(" "),n("p",[t._v("释放写锁与独占锁的释放过程基本类似，每次释放均减少写状态，减少的值是 1，当写状态为 0 时表示写锁已经被释放。")]),t._v(" "),n("h3",{attrs:{id:"_4-4-读锁的获取与释放"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_4-4-读锁的获取与释放"}},[t._v("#")]),t._v(" 4.4 读锁的获取与释放")]),t._v(" "),n("p",[t._v("读锁是一个支持重进入的共享锁。能够被多个线程同时获取，且可以获取多次。")]),t._v(" "),n("p",[n("strong",[t._v("读状态是所有线程获取读锁次数的总和")]),t._v("。因此每个线程各自获取读锁的次数只能保存在 ThreadLocal 中。")]),t._v(" "),n("h4",{attrs:{id:"_4-4-1-reentrantreadwritelock-对读锁获取的实现"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_4-4-1-reentrantreadwritelock-对读锁获取的实现"}},[t._v("#")]),t._v(" 4.4.1 ReentrantReadWriteLock 对读锁获取的实现")]),t._v(" "),n("p",[t._v("获取读锁的条件：")]),t._v(" "),n("ul",[n("li",[t._v("写锁已经获取，且当前线程不是获取写锁的线程，则无法获取读锁。")]),t._v(" "),n("li",[t._v("写锁已经获取，且当前线程为获取写锁的线程时，则有可能获取读锁。（考虑公平与非公平，且以 CAS 设置）")]),t._v(" "),n("li",[t._v("读锁和写锁都未获取时，有可能获取读锁。（考虑公平与非公平，且以 CAS 设置）")])]),t._v(" "),n("p",[t._v("（由于各自线程需要维护自身获取读锁的次数，此处代码比较复杂，但是原理不变。）")]),t._v(" "),n("h4",{attrs:{id:"_4-4-2-reentrantreadwritelock-对读锁释放的实现"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_4-4-2-reentrantreadwritelock-对读锁释放的实现"}},[t._v("#")]),t._v(" 4.4.2 ReentrantReadWriteLock 对读锁释放的实现")]),t._v(" "),n("p",[t._v("释放读锁时均减少读状态（需保证线程安全，可能有多个读线程同时释放读锁），减少的值是 "),n("code",[t._v("1 << 16")]),t._v("。")]),t._v(" "),n("h3",{attrs:{id:"_4-5-锁降级"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_4-5-锁降级"}},[t._v("#")]),t._v(" 4.5 锁降级")]),t._v(" "),n("p",[t._v("所有读写锁的实现必须确保写操作对读操作的内存影响。")]),t._v(" "),n("p",[t._v("读写锁支持锁降级，指把持住当前拥有的写锁的同时，再获取到读锁，随后释放写锁的过程。即写锁能够降级为读锁。")]),t._v(" "),n("p",[t._v("目的：为了保证数据的可见性，如果当前线程不获取读锁直接释放写锁，假设此刻另一个线程（记作线程 T）获取写锁并修改了数据，那么当前线程无法感知到线程 T 的数据更新。如果当前线程获取读锁，则线程 T 将会被阻塞，直到当前线程释放读锁之后，线程 T 才能获取写锁更新数据。")]),t._v(" "),n("h2",{attrs:{id:"_5-locksupport-工具"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_5-locksupport-工具"}},[t._v("#")]),t._v(" 5. LockSupport 工具")]),t._v(" "),n("p",[t._v("定义了一组公共的静态方法，提供了最基本的线程阻塞和唤醒功能。")]),t._v(" "),n("table",[n("thead",[n("tr",[n("th",[t._v("方法名称")]),t._v(" "),n("th",[t._v("描述")]),t._v(" "),n("th",[t._v("blocker 参数可选")])])]),t._v(" "),n("tbody",[n("tr",[n("td",[n("code",[t._v("void park(Object blocker)")])]),t._v(" "),n("td",[t._v("阻塞当前线程。以下情况唤醒线程："),n("br"),t._v("1. 其他线程以当前线程为目标调用 "),n("code",[t._v("unpark(Thread thread)")]),t._v(" 方法。"),n("br"),t._v("2. 其他线程中断当前线程。"),n("br")]),t._v(" "),n("td",[t._v("可选。阻塞对象，用来问题排查和系统监控。")])]),t._v(" "),n("tr",[n("td",[n("code",[t._v("void parkNanos(Object blocker, long nanos)")])]),t._v(" "),n("td",[t._v("阻塞当前线程，最长不超过 "),n("em",[t._v("nanos")]),t._v(" 纳秒。以下情况唤醒线程："),n("br"),t._v("1. 其他线程以当前线程为目标调用 "),n("code",[t._v("unpark(Thread thread)")]),t._v(" 方法。"),n("br"),t._v("2. 其他线程中断当前线程。"),n("br"),t._v("3. 超时时间到。")]),t._v(" "),n("td",[t._v("可选。同上")])]),t._v(" "),n("tr",[n("td",[n("code",[t._v("void parkUntil(Object blocker, long deadline)")])]),t._v(" "),n("td",[t._v("阻塞当前线程，直到 "),n("em",[t._v("deadline")]),t._v(" 时间"),n("br"),t._v("（从 1970 年开始的毫秒数）以下情况唤醒线程："),n("br"),t._v("1. 其他线程以当前线程为目标调用 "),n("code",[t._v("unpark(Thread thread)")]),t._v(" 方法。"),n("br"),t._v("2. 其他线程中断当前线程。"),n("br"),t._v("3. 到达最后时间。")]),t._v(" "),n("td",[t._v("可选。同上")])]),t._v(" "),n("tr",[n("td",[n("code",[t._v("void unpark(Thread thread)")])]),t._v(" "),n("td",[t._v("唤醒处于阻塞状态的目标线程 thread")]),t._v(" "),n("td",[t._v("N/A")])]),t._v(" "),n("tr",[n("td",[n("code",[t._v("Object getBlocker(Thread t)")])]),t._v(" "),n("td",[t._v("返回阻塞对象。")]),t._v(" "),n("td",[t._v("N/A")])])])]),t._v(" "),n("h2",{attrs:{id:"_6-condition-接口"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_6-condition-接口"}},[t._v("#")]),t._v(" 6. Condition 接口")]),t._v(" "),n("p",[t._v("为 Lock 提供的监视器方法，以实现等待/通知模式。")]),t._v(" "),n("p",[t._v("ConditionObject 是同步器 AQS 的内部类，因为它的操作需要获取相关的锁。")]),t._v(" "),n("h3",{attrs:{id:"_6-1-常用方法"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_6-1-常用方法"}},[t._v("#")]),t._v(" 6.1 常用方法")]),t._v(" "),n("table",[n("thead",[n("tr",[n("th",[t._v("方法名称")]),t._v(" "),n("th",[t._v("描述")])])]),t._v(" "),n("tbody",[n("tr",[n("td",[n("code",[t._v("void await() throws InterruptedException")])]),t._v(" "),n("td",[t._v("当前线程释放锁并进入等待状态，直到被通知（"),n("em",[t._v("signal")]),t._v("）或中断。该方法返回的情况（即当前线程重新进入运行状态）："),n("br"),t._v("1. 其他线程调用该 "),n("code",[t._v("Condition")]),t._v(" 的 "),n("code",[t._v("signal()")]),t._v(" 或 "),n("code",[t._v("signalAll()")]),t._v(" 方法；"),n("br"),t._v("2. 其他线程调用 "),n("code",[t._v("interrupt()")]),t._v(" 方法中断当前线程。"),n("br"),t._v("如果当前等待线程从该方法返回，则表明该线程已经获取了 "),n("code",[t._v("Condition")]),t._v(" 对象对应的锁。")])]),t._v(" "),n("tr",[n("td",[n("code",[t._v("void awaitUninterruptibly()")])]),t._v(" "),n("td",[t._v("同上。该方法不响应中断。")])]),t._v(" "),n("tr",[n("td",[n("code",[t._v("long awaitNanos(long nanosTimeout) throws InterruptedException")])]),t._v(" "),n("td",[t._v("同上。该方法响应超时。"),n("br"),t._v("如果提前被唤醒，返回值表示剩余时间。"),n("br"),t._v("如果超时，返回 0 或者负数。")])]),t._v(" "),n("tr",[n("td",[n("code",[t._v("boolean awaitUntil(Date deadline) throws InterruptedException")])]),t._v(" "),n("td",[t._v("同上。该方法响应 "),n("em",[t._v("deadline")]),t._v("。"),n("br"),t._v("如果提前被唤醒，返回 "),n("code",[t._v("true")]),t._v("。"),n("br"),t._v("否则，返回 "),n("code",[t._v("false")]),t._v("。")])]),t._v(" "),n("tr",[n("td",[n("code",[t._v("boolean await(long time, TimeUnit unit) throws InterruptedException")])]),t._v(" "),n("td",[t._v("同上。需传入 "),n("code",[t._v("TimeUnit")]),t._v("。")])]),t._v(" "),n("tr",[n("td",[n("code",[t._v("void signal()")])]),t._v(" "),n("td",[t._v("唤醒一个等待在 "),n("code",[t._v("Condition")]),t._v(" 上的线程，该线程返回前必须获得了 "),n("code",[t._v("Condition")]),t._v(" 对象对应的锁。")])]),t._v(" "),n("tr",[n("td",[n("code",[t._v("void signalAll()")])]),t._v(" "),n("td",[t._v("唤醒所有等待在 "),n("code",[t._v("Condition")]),t._v(" 上的线程，线程返回前必须获得了 "),n("code",[t._v("Condition")]),t._v(" 对象对应的锁。")])])])]),t._v(" "),n("h3",{attrs:{id:"_6-2-使用方式"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_6-2-使用方式"}},[t._v("#")]),t._v(" 6.2 使用方式")]),t._v(" "),n("div",{staticClass:"language-java extra-class"},[n("pre",{pre:!0,attrs:{class:"language-java"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ConditionUseCase")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Lock")]),t._v(" lock "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ReentrantLock")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Condition")]),t._v(" condition "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" lock"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("newCondition")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    \n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("conditionWait")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("throws")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("InterruptedException")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        lock"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("lock")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("try")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            condition"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("await")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("finally")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            lock"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("unlock")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    \n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("conditionSignal")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        lock"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("lock")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("try")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            condition"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("signal")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("finally")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            lock"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("unlock")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n")])])]),n("h3",{attrs:{id:"_6-3-等待队列"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_6-3-等待队列"}},[t._v("#")]),t._v(" 6.3 等待队列")]),t._v(" "),n("p",[n("code",[t._v("Condition")]),t._v(" 对象依赖内部的等待队列（一个 FIFO 的双向队列）来完成等待状态的管理。")]),t._v(" "),n("h4",{attrs:{id:"_6-3-1-等待队列的结构"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_6-3-1-等待队列的结构"}},[t._v("#")]),t._v(" 6.3.1 等待队列的结构")]),t._v(" "),n("ul",[n("li",[t._v("每个 "),n("code",[t._v("Condition")]),t._v(" 对象都包含一个队列（等待队列），该队列是实现等待/通知功能的关键。")]),t._v(" "),n("li",[t._v("等待队列是一个 FIFO 的队列，该队列的每个节点都包含了一个线程引用，该线程就是在 "),n("code",[t._v("Condition")]),t._v(" 对象上等待的线程。")]),t._v(" "),n("li",[t._v("一个 "),n("code",[t._v("Condition")]),t._v(" 对象包含一个等待队列，"),n("code",[t._v("Condition")]),t._v(" 对象拥有首节点（firstWaiter）和尾节点（lastWaiter）。")])]),t._v(" "),n("p",[n("img",{attrs:{src:a(453),alt:""}})]),t._v(" "),n("h4",{attrs:{id:"_6-3-2-等待队列节点的入列和出列"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_6-3-2-等待队列节点的入列和出列"}},[t._v("#")]),t._v(" 6.3.2 等待队列节点的入列和出列")]),t._v(" "),n("ul",[n("li",[t._v("入列：如果一个线程调用了 "),n("code",[t._v("Condition.await()")]),t._v(" 方法，那么该线程就会释放锁，并将自己构造成节点（Node）加入等待队列尾部，进入等待状态。")]),t._v(" "),n("li",[t._v("出列：调用 "),n("code",[t._v("Condition")]),t._v(" 的 "),n("code",[t._v("signal()")]),t._v(" 方法，会唤醒等待队列中的首节点，将其移动到同步队列尾部，并使用 "),n("code",[t._v("LockSupport")]),t._v(" 唤醒节点中的线程。")])]),t._v(" "),n("blockquote",[n("p",[t._v("事实上，节点的定义复用了同步器中节点的定义。也就是说同步队列和等待队列中的节点类型是相同的，都是同步器的静态内部类 "),n("code",[t._v("AbstractQueuedSynchronizer.Node")]),t._v("。")])]),t._v(" "),n("p",[n("code",[t._v("Condition")]),t._v(" 的 "),n("code",[t._v("signalAll()")]),t._v(" 方法，相当于对等待队列中的每个节点均执行一次 "),n("code",[t._v("signal()")]),t._v(" 方法。效果就是将等待队列中的所有节点都移动到同步队列中，并唤醒节点中的线程。")]),t._v(" "),n("h3",{attrs:{id:"_6-4-synchronized-监视器与-condition-对比"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_6-4-synchronized-监视器与-condition-对比"}},[t._v("#")]),t._v(" 6.4 Synchronized 监视器与 Condition 对比")]),t._v(" "),n("p",[t._v("Synchronized 将监视器定义在 Object 对象上。同步器提供了 Condition 接口来实现自定义同步组件的监视器方法。")]),t._v(" "),n("table",[n("thead",[n("tr",[n("th",[t._v("对比项")]),t._v(" "),n("th",[t._v("Object Monitor")]),t._v(" "),n("th",[t._v("Condition")])])]),t._v(" "),n("tbody",[n("tr",[n("td",[t._v("前置条件")]),t._v(" "),n("td",[t._v("使用 synchronized 关键字加锁")]),t._v(" "),n("td",[t._v("先调用 Lock.lock() 加锁，"),n("br"),t._v("然后调用 Lock.newCondition() 获取 Condition 对象")])]),t._v(" "),n("tr",[n("td",[t._v("调用方式")]),t._v(" "),n("td",[t._v("对象直接调用"),n("br"),t._v("如：object.wait()")]),t._v(" "),n("td",[t._v("使用 Condition 对象调用"),n("br"),t._v("如：condition.await()")])]),t._v(" "),n("tr",[n("td",[t._v("等待队列数量")]),t._v(" "),n("td",[t._v("一个")]),t._v(" "),n("td",[t._v("多个")])]),t._v(" "),n("tr",[n("td",[t._v("使当前线程释放锁并进入等待状态")]),t._v(" "),n("td",[t._v("支持")]),t._v(" "),n("td",[t._v("支持")])]),t._v(" "),n("tr",[n("td",[t._v("在等待状态中响应中断")]),t._v(" "),n("td",[t._v("不支持")]),t._v(" "),n("td",[t._v("支持")])]),t._v(" "),n("tr",[n("td",[t._v("使当前线程释放锁并进入超时等待状态")]),t._v(" "),n("td",[t._v("支持")]),t._v(" "),n("td",[t._v("支持")])]),t._v(" "),n("tr",[n("td",[t._v("使当前线程释放锁并进入等待状态直到将来某个时间")]),t._v(" "),n("td",[t._v("不支持")]),t._v(" "),n("td",[t._v("支持")])]),t._v(" "),n("tr",[n("td",[t._v("唤醒等待队列中的一个线程")]),t._v(" "),n("td",[t._v("支持")]),t._v(" "),n("td",[t._v("支持")])]),t._v(" "),n("tr",[n("td",[t._v("唤醒等待队列中的多个线程")]),t._v(" "),n("td",[t._v("支持")]),t._v(" "),n("td",[t._v("支持")])])])]),t._v(" "),n("p",[t._v("在 Object 的监视器模型上（即 Synchronized 关键字），一个对象拥有一个同步队列和一个等待队列。而并发包中的同步器拥有一个同步队列和多个等待队列。如下图：")]),t._v(" "),n("p",[n("img",{attrs:{src:a(454),alt:""}})]),t._v(" "),n("p",[n("code",[t._v("Condition")]),t._v(" 的实现是同步器（AQS）的内部类，因此每个 "),n("code",[t._v("Condition")]),t._v(" 实例都能访问同步器提供的方法，相当于每个 "),n("code",[t._v("Condition")]),t._v(" 都拥有所属同步器的引用。")])],1)}),[],!1,null,null,null);s.default=e.exports}}]);